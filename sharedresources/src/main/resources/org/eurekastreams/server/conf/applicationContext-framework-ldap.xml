<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
      
    <bean id="ldapTemplates" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="none" value-ref="ldapTemplateExample" />
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="baseLdapPath" class="java.lang.String">
        <constructor-arg value="dc=none,dc=none,dc=none"/>
    </bean>

    <bean id="baseLdapTemplate" class="org.springframework.ldap.core.LdapTemplate"
        abstract="true">
        <property name="base" ref="baseLdapPath" />
        <property name="userDn" value="${eureka.security.ldap.userdn}" />
        <property name="password" value="${eureka.security.ldap.password}" />
    </bean>

    <bean id="ldapTemplateExample" scope="singleton"
        class="org.springframework.ldap.core.LdapTemplate">
        <constructor-arg>
            <bean class="org.springframework.ldap.core.support.LdapContextSource"
                parent="baseLdapTemplate">
                <property name="urls"
                    value="ldaps://ldap.example.com" />
            </bean>
        </constructor-arg>
    </bean>
    
    <bean id="ldapToPersonMapper"
        class="org.eurekastreams.server.persistence.mappers.ldap.callback.LdapToPersonMapper">
        <property name="accountAttrib" value="none" />
        <property name="firstNameAttrib" value="none" />
        <property name="lastNameAttrib" value="none" />
        <property name="orgAttrib" value="none" />
        <property name="titleAttrib" value="none" />
        <property name="fullNameAttrib" value="none" />
        <property name="companyAttrib" value="none" />
        <property name="emailAttrib" value="none" />
        <property name="supportEmail" value="${eureka.mail.support.emailaddress}" />
    </bean>

    <bean id="ldapToLdapGroupMapper" class="org.eurekastreams.server.persistence.mappers.ldap.callback.LdapToLdapGroupMapper" />
    
     <!-- Constructs a query where results will contain matches of the conjunction of 
    each filter object supplied in the filter list.  -->
    <bean id="findPersonByAttributeQueryFilter"
        class="org.eurekastreams.server.persistence.mappers.ldap.filters.FindByAttributeQuery">
        <constructor-arg>
            <list>
                <bean class="org.springframework.ldap.filter.EqualsFilter">
                    <constructor-arg value="none"/>
                    <constructor-arg value="none"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

   <!-- Constructs a query where results will contain matches of the conjunction of 
    each filter object supplied in the filter list.  -->
    <bean id="findGroupByAttributeQueryFilter"
        class="org.eurekastreams.server.persistence.mappers.ldap.filters.FindByAttributeQuery">
        <constructor-arg>
            <list>
                <bean class="org.springframework.ldap.filter.EqualsFilter">
                    <constructor-arg value="none"/>
                    <constructor-arg value="none"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>   
    
    <bean id="findLdapGroupByCnFilter" class="org.eurekastreams.server.persistence.mappers.ldap.filters.FindByAttribute">
        <constructor-arg value="none"/>
        <constructor-arg ref="findGroupByAttributeQueryFilter"/>
        <constructor-arg value="true"/>
    </bean>
    
    <bean id="findPersonByAccountIdFilter" class="org.eurekastreams.server.persistence.mappers.ldap.filters.FindByAttribute">
        <constructor-arg value="none"/>
        <constructor-arg ref="findPersonByAttributeQueryFilter"/>
        <constructor-arg value="true"/>
    </bean>    
    
    <bean id="findPersonByCnWildcardFilter" class="org.eurekastreams.server.persistence.mappers.ldap.filters.FindByAttribute">
        <constructor-arg value="none"/>
        <constructor-arg ref="findPersonByAttributeQueryFilter"/>
        <constructor-arg value="false"/>
    </bean>
    
    <bean id="findLdapGroupByMembershipFilter" class="org.eurekastreams.server.persistence.mappers.ldap.filters.FindByAttribute">
        <constructor-arg value="none"/>
        <constructor-arg ref="findGroupByAttributeQueryFilter"/>
        <constructor-arg value="true"/>
    </bean>
    
   <bean id="findPersonByMembershipFilter" class="org.eurekastreams.server.persistence.mappers.ldap.filters.FindByAttribute">
        <constructor-arg value="none"/>
        <constructor-arg ref="findPersonByAttributeQueryFilter"/>
        <constructor-arg value="true"/>
    </bean>   
    
    <bean id="searchStringLdapTemplateRetriever" class="org.eurekastreams.server.persistence.mappers.ldap.templateretrievers.SearchStringLdapTemplateRetriever">
        <constructor-arg ref="ldapTemplates"/>
        <constructor-arg ref="ldapTemplateExample" />
    </bean> 
    
    <bean id="ldapGroupDnLdapTemplateRetriever" class="org.eurekastreams.server.persistence.mappers.ldap.templateretrievers.LdapGroupDnLdapTemplateRetriever">
        <constructor-arg ref="ldapTemplates"/>
        <constructor-arg ref="ldapTemplateExample" />
    </bean>   
    
    <bean id="ldapToPersonCallbackFactory" class="org.eurekastreams.server.persistence.mappers.ldap.callback.AttributesMapperCallbackHandlerFactory">
        <constructor-arg ref="ldapToPersonMapper"/>            
    </bean>
    
    <bean id="ldapToLdapGroupCallbackFactory" class="org.eurekastreams.server.persistence.mappers.ldap.callback.ContextMapperCallbackHandlerFactory">
        <constructor-arg ref="ldapToLdapGroupMapper"/>           
    </bean>  
        
    <bean id="pagedLdapSearchStrategy" class="org.eurekastreams.server.persistence.mappers.ldap.PagedLdapSearchStrategy" />
    
    <bean id="defaultLdapSearchStrategy" class="org.eurekastreams.server.persistence.mappers.ldap.DefaultLdapSearchStrategy" />              
        
</beans>
